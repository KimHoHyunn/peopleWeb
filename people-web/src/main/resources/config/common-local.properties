spring.devtools.livereload.enabled=true

#spring.thymeleaf.cache는 배포할 때는 설정한 속성을 삭제하거나 true로 변경
spring.thymeleaf.cache=false
spring.main.allow-bean-definition-overriding=true

#tomcat config
server.tomcat.additional-tld-skip-patterns=*.jar
#server.port = 8080

# 생성할 수 있는 thread의 총 개수
server.tomcat.threads.max=200 
# 항상 활성화 되어있는(idle) thread의 개수
server.tomcat.threads.min-spare=10 
# 수립가능한 connection의 총 개수
server.tomcat.max-connections=8192 
# 작업큐의 사이즈
server.tomcat.accept-count=100 
# timeout 판단 기준 시간, 10초
server.tomcat.connection-timeout=10000
# 서버를 띄울 포트번호
server.port = 8080

#logging.level.com.zaxxer.hikari=OFF 
#logging.level.com.zaxxer.hikari.HikariConfig=INFO
logging.config=classpath:config/logback-${spring.profiles.active}.xml

#MySQL DataSource
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.jdbc-url=jdbc:log4jdbc:mysql://localhost:3306/people?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.jdbc-url=jdbc:mysql://localhost:3306/people?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=people
spring.datasource.password=~~ksj122400




#<JMS>-------------------------------------------------------------------------
spring.artemis.mode=EMBEDDED
spring.artemis.host=localhost
spring.artemis.port=61616
spring.artemis.embedded.enabled=true
spring.artemis.pool.enabled=true
spring.artemis.pool.max-connections=10
spring.artemis.broker-url=tcp://0.0.0.0:61616

#spring.jms.jndi-name=java:/jmsListenerContainerFactory
spring.jms.cache.session-cache-size=5
logging.level.org.apache.activemq.audit.base=WARN
logging.level.org.apache.activemq.audit.message=WARN

spring.jms.queue.destination=peoplebaseQ0
#-------------------------------------------------------------------------<JMS>

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size: 10MB
#      location: d:\\temp\\spring_uploaded_files


#Whitelabel Error Page를 비활성화하고 서블릿 컨테이너를 사용하여 HTML 오류 메시지를 제공하는 데 사용할 수 있습니다 .
#server.error.whitelabel.enabled=false

#- 스택 트레이스는 : 항상 으로 가치, 그것은 HTML과 JSON의 기본 응답 모두에서 스택 트레이스를 포함
#server.error.include 




#---------------아래는 설정 테스트한 것들------------------------------------------------------#
#로그에서 SQL 줄바꿈 (log4jdbc를 사용할 때 설정하는 것)
#log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
#log4jdbc.dump.sql.maxlinelength=0

#log파일의 최대 보관일수
#logging.logback.rollingpolicy.max-history=7
#로그파일 output file의 시간 포맷
#logging.pattern.dateformat=yyyy-MM-dd HH:mm
#logging.pattern.dateformat=%d{HH:mm:ss.SSS}
#로그 표기 레벨. infoin 위함 실제론 fatal을 쓰진않았음.
#logging.level.root=info
#  - Log Level 
#logging.level.com.shinhan.o2o.shop=debug
#logging.level.com.shinhan.o2o.office=debug
#logging.level.sql=debug

# 로그 관련 설정
#logging.level.jdbc.sqlonly=debug
#logging.level.jdbc.sqltiming=off
#logging.level.jdbc.resultsettable=off
#logging.level.jdbc.audit=off
#logging.level.jdbc.resultset=off
#logging.level.jdbc.connection=off

# mybatis
#mybatis.config=mybatis-config.xml
#mybatis.type-aliases-package: com.people.*.vo
#mybatis.mapper-locations: classpath*:mapper/**/*.xml

# DataSource
# spring.datasource.url=jdbc:mysql://localhost:3306/[DB스키마명]?autoReconnect=true
# spring.datasource.username=[DB접속Id]
# spring.datasource.password=[DB접속Password]
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# MyBatis
# mapper.xml 위치 지정
#mybatis.mapper-locations=classpath:com/people/**/*.xml

# model 프로퍼티 camel case 설정
#mybatis.configuration.map-underscore-to-camel-case=true

# mapper 로그레벨 설정
#logging.level.com.atoz_develop.mybatissample.repository=TRACE
